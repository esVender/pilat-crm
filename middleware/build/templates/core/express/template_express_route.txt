/**
 * Created by @ES Express Systems
 * User: #userCreated
 * Date: #dateCreated
 * Time: #timeCreated
 * Last User updated: #userUpdated
 * Last date updated: #dateUpdated
 * Last time updated: #timeUpdated
 *
 * Caution: es-sections will be replaced by script execution
 */

import configJson from '../../../config/config';
const sys = configJson.system;
const express = require("express");
const router = express.Router();
//const authenticateToken = require("../../../config/token");

//<es-section>
const lcObjPLocalTableNameCtrl = require("../controllers/local_table_name.controller");
//</es-section>
//<es-section>
<<<sequelizeStoreRoutes>>>
router.get(`/api-${sys}/local-table-name/findUcObjPForeignTableNameUcObjlocalStoreFieldNameWithUcObjForeignStoreFieldNameWithLabel`, (req, res) => lcObjPLocalTableNameCtrl.findUcObjPForeignTableNameUcObjlocalStoreFieldNameWithUcObjForeignStoreFieldNameWithLabel(req, res));
router.get(`/api-${sys}/local-table-name/filterUcObjPLocalTableNameByUcObjlocalStoreFieldName/:lcObjLocalFieldName/`, (req, res) => lcObjPLocalTableNameCtrl.filterUcObjPLocalTableNameByUcObjlocalStoreFieldName(req, res));
>>>sequelizeStoreRoutes<<<

<<<sequelizeFindOneByFieldsRouteFunctions>>>
router.get(`/api-${sys}/local-table-name/findOneByUcObjLocalCommonFieldName/:lcObjLocalFieldName`, (req, res) => lcObjPLocalTableNameCtrl.findOneByUcObjLocalCommonFieldName(req, res));
>>>sequelizeFindOneByFieldsRouteFunctions<<<

<<<sequelizeUpdateByFieldsRouteFunctions>>>
router.post(`/api-${sys}/local-table-name/updateUcObjSLocalTableNameByUcObjLocalCommonFieldName`, (req, res) => lcObjPLocalTableNameCtrl.updateUcObjSLocalTableNameByUcObjLocalCommonFieldName(req, res));
>>>sequelizeUpdateByFieldsRouteFunctions<<<

<<<sequelizeStoreRouteFunctions>>>
router.get(`/api-${sys}/local-table-name/findUcObjPForeignTableNameUcObjlocalStoreFieldNameWithUcObjForeignStoreFieldNameWithLabel`, (req, res) => lcObjPLocalTableNameCtrl.findUcObjPForeignTableNameUcObjlocalStoreFieldNameWithUcObjForeignStoreFieldNameWithLabel(req, res));
>>>sequelizeStoreRouteFunctions<<<

<<<sequelizeDefaultRoutes>>>
router.get(`/api-${sys}/local-table-name/`, (req, res) => lcObjPLocalTableNameCtrl.getAllUcObjPLocalTableName(req, res));
router.post(`/api-${sys}/local-table-name/`, (req, res) => lcObjPLocalTableNameCtrl.addUcObjSLocalTableName(req, res));
router.get(`/api-${sys}/local-table-name/:lcObjLocalPrimaryName`, (req, res) => lcObjPLocalTableNameCtrl.getAUcObjSLocalTableName(req, res));
router.put(`/api-${sys}/local-table-name/:lcObjLocalPrimaryName`, (req, res) => lcObjPLocalTableNameCtrl.updateUcObjSLocalTableName(req, res));
router.delete(`/api-${sys}/local-table-name/:lcObjLocalPrimaryName`, (req, res) => lcObjPLocalTableNameCtrl.deleteUcObjSLocalTableName(req, res));
>>>sequelizeDefaultRoutes<<<
//</es-section>
module.exports = router;
